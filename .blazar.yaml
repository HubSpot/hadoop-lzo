buildDeps:
  - hs-build-tools
  - maven3

buildpack:
  name: Blazar-Buildpack-RPM

env:
  PLATFORMS: "amd64"
  # Don't use the buildpack to build and upload RPMs for us
  DISABLE_CENTOS_6_RPMS: "true"
  ENABLE_CENTOS_8_RPMS: "true"

  # The entry point script for the rpm build
  RPM_BUILD_COMMAND: "./build.sh"
  RPMS_OUTPUT_DIR: "$WORKSPACE/generated_rpms"
  BUILD_CONTAINER_IMAGE_CENTOS_8: "docker.hubteam.com/apache-hadoop-build-container/apache-hadoop-build-container:latest"
  WORKSPACE_WRITEABLE: "true"

stepActivation:
  uploadRpms:
    branchRegexes: [.*]

before:
  - description: Set yum repo
    commands:
      - |
        if [ "$GIT_BRANCH" = "$MAIN_BRANCH" ]; then
          repo=$MAIN_YUM_REPO
        else
          repo=$DEVELOP_YUM_REPO
        fi
        # exports in this rc file are available in all steps
        echo "export YUM_REPO_UPLOAD_OVERRIDE_CENTOS_8=$repo" >> $BUILD_COMMAND_RC_FILE
        echo "Will upload package to $repo"
  - description: "Overriding maven versions if on a branch"
    commands:
      - command: '[ "$GIT_BRANCH" == "master" ] || set-maven-versions --version $SET_VERSION --root $WORKSPACE'
        env:
          SET_VERSION: "0.4.21-hubspot-${GIT_BRANCH}-SNAPSHOT"
  - description: "Creating hubspot.build.json metadata"
    commands:
      - |
        create-build-json --workspace_path . --project_name $BLAZAR_COORDINATES
        for pomfile in $(find . -name pom.xml -maxdepth 2); do
          pomdir=$(dirname $pomfile)
          echo "Copying build json into $pomdir"
          copy-build-json --search-dir . --module-dir $pomdir
        done

after:
    onSuccess:
      - name: createDeployable
        description: "Creating deployable slug"
        commands:
          - mkdir -p /tmp/deploy-slug
          - cd /tmp/deploy-slug && mkdir -p app bin conf logs
          - cp hubspot.build.json /tmp/deploy-slug/conf/build.json
          - cd $WORKSPACE && for each in $(find . -name target -type d); do mkdir -p /tmp/deploy-slug/app/$each && cp -r $each/* /tmp/deploy-slug/app/$each; done
          - 'tar czf artifact.tgz -C /tmp/deploy-slug .'

      - name: uploadDeployable
        description: "Uploading deployable slug to S3"
        commands:
          - command: upload-artifact --auto-sign --artifact artifact.tgz

      - description: Add .blazar_notify_deploy_service_and_upload_artifact_if_exists flag
        commands:
          - command: touch .blazar_notify_deploy_service_and_upload_artifact_if_exists
